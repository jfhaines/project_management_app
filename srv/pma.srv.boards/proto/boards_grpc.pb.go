// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.12
// source: boards.proto

package boards

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BoardsServiceClient is the client API for BoardsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BoardsServiceClient interface {
	GetBoard(ctx context.Context, in *GetBoardRequest, opts ...grpc.CallOption) (*GetBoardResponse, error)
	ListBoards(ctx context.Context, in *ListBoardsRequest, opts ...grpc.CallOption) (*ListBoardsResponse, error)
	CreateBoard(ctx context.Context, in *CreateBoardRequest, opts ...grpc.CallOption) (*CreateBoardResponse, error)
	EditBoard(ctx context.Context, in *EditBoardRequest, opts ...grpc.CallOption) (*EditBoardResponse, error)
	DeleteBoard(ctx context.Context, in *DeleteBoardRequest, opts ...grpc.CallOption) (*DeleteBoardResponse, error)
	GetColumn(ctx context.Context, in *GetColumnRequest, opts ...grpc.CallOption) (*GetColumnResponse, error)
	ListColumns(ctx context.Context, in *ListColumnsRequest, opts ...grpc.CallOption) (*ListColumnsResponse, error)
	CreateColumn(ctx context.Context, in *CreateColumnRequest, opts ...grpc.CallOption) (*CreateColumnResponse, error)
	EditColumn(ctx context.Context, in *EditColumnRequest, opts ...grpc.CallOption) (*EditColumnResponse, error)
	DeleteColumn(ctx context.Context, in *DeleteColumnRequest, opts ...grpc.CallOption) (*DeleteColumnResponse, error)
	GetCard(ctx context.Context, in *GetCardRequest, opts ...grpc.CallOption) (*GetCardResponse, error)
	ListCards(ctx context.Context, in *ListCardsRequest, opts ...grpc.CallOption) (*ListCardsResponse, error)
	CreateCard(ctx context.Context, in *CreateCardRequest, opts ...grpc.CallOption) (*CreateCardResponse, error)
	EditCard(ctx context.Context, in *EditCardRequest, opts ...grpc.CallOption) (*EditCardResponse, error)
	DeleteCard(ctx context.Context, in *DeleteCardRequest, opts ...grpc.CallOption) (*DeleteCardResponse, error)
	GetCardUser(ctx context.Context, in *GetCardUserRequest, opts ...grpc.CallOption) (*GetCardUserResponse, error)
	ListCardUsers(ctx context.Context, in *ListCardUsersRequest, opts ...grpc.CallOption) (*ListCardUsersResponse, error)
	CreateCardUser(ctx context.Context, in *CreateCardUserRequest, opts ...grpc.CallOption) (*CreateCardUserResponse, error)
	EditCardUser(ctx context.Context, in *EditCardUserRequest, opts ...grpc.CallOption) (*EditCardUserResponse, error)
	DeleteCardUser(ctx context.Context, in *DeleteCardUserRequest, opts ...grpc.CallOption) (*DeleteCardUserResponse, error)
	GetCardLabel(ctx context.Context, in *GetCardLabelRequest, opts ...grpc.CallOption) (*GetCardLabelResponse, error)
	ListCardLabels(ctx context.Context, in *ListCardLabelsRequest, opts ...grpc.CallOption) (*ListCardLabelsResponse, error)
	CreateCardLabel(ctx context.Context, in *CreateCardLabelRequest, opts ...grpc.CallOption) (*CreateCardLabelResponse, error)
	EditCardLabel(ctx context.Context, in *EditCardLabelRequest, opts ...grpc.CallOption) (*EditCardLabelResponse, error)
	DeleteCardLabel(ctx context.Context, in *DeleteCardLabelRequest, opts ...grpc.CallOption) (*DeleteCardLabelResponse, error)
	GetCardComment(ctx context.Context, in *GetCardCommentRequest, opts ...grpc.CallOption) (*GetCardCommentResponse, error)
	ListCardComments(ctx context.Context, in *ListCardCommentsRequest, opts ...grpc.CallOption) (*ListCardCommentsResponse, error)
	CreateCardComment(ctx context.Context, in *CreateCardCommentRequest, opts ...grpc.CallOption) (*CreateCardCommentResponse, error)
	EditCardComment(ctx context.Context, in *EditCardCommentRequest, opts ...grpc.CallOption) (*EditCardCommentResponse, error)
	DeleteCardComment(ctx context.Context, in *DeleteCardCommentRequest, opts ...grpc.CallOption) (*DeleteCardCommentResponse, error)
	GetCardChecklistItem(ctx context.Context, in *GetCardChecklistItemRequest, opts ...grpc.CallOption) (*GetCardChecklistItemResponse, error)
	ListCardChecklistItems(ctx context.Context, in *ListCardChecklistItemsRequest, opts ...grpc.CallOption) (*ListCardChecklistItemsResponse, error)
	CreateCardChecklistItem(ctx context.Context, in *CreateCardChecklistItemRequest, opts ...grpc.CallOption) (*CreateCardChecklistItemResponse, error)
	EditCardChecklistItem(ctx context.Context, in *EditCardChecklistItemRequest, opts ...grpc.CallOption) (*EditCardChecklistItemResponse, error)
	DeleteCardChecklistItem(ctx context.Context, in *DeleteCardChecklistItemRequest, opts ...grpc.CallOption) (*DeleteCardChecklistItemResponse, error)
	GetCardAttachment(ctx context.Context, in *GetCardAttachmentRequest, opts ...grpc.CallOption) (*GetCardAttachmentResponse, error)
	ListCardAttachments(ctx context.Context, in *ListCardAttachmentsRequest, opts ...grpc.CallOption) (*ListCardAttachmentsResponse, error)
	CreateCardAttachment(ctx context.Context, in *CreateCardAttachmentRequest, opts ...grpc.CallOption) (*CreateCardAttachmentResponse, error)
	EditCardAttachment(ctx context.Context, in *EditCardAttachmentRequest, opts ...grpc.CallOption) (*EditCardAttachmentResponse, error)
	DeleteCardAttachment(ctx context.Context, in *DeleteCardAttachmentRequest, opts ...grpc.CallOption) (*DeleteCardAttachmentResponse, error)
}

type boardsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBoardsServiceClient(cc grpc.ClientConnInterface) BoardsServiceClient {
	return &boardsServiceClient{cc}
}

func (c *boardsServiceClient) GetBoard(ctx context.Context, in *GetBoardRequest, opts ...grpc.CallOption) (*GetBoardResponse, error) {
	out := new(GetBoardResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/GetBoard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) ListBoards(ctx context.Context, in *ListBoardsRequest, opts ...grpc.CallOption) (*ListBoardsResponse, error) {
	out := new(ListBoardsResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/ListBoards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) CreateBoard(ctx context.Context, in *CreateBoardRequest, opts ...grpc.CallOption) (*CreateBoardResponse, error) {
	out := new(CreateBoardResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/CreateBoard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) EditBoard(ctx context.Context, in *EditBoardRequest, opts ...grpc.CallOption) (*EditBoardResponse, error) {
	out := new(EditBoardResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/EditBoard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) DeleteBoard(ctx context.Context, in *DeleteBoardRequest, opts ...grpc.CallOption) (*DeleteBoardResponse, error) {
	out := new(DeleteBoardResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/DeleteBoard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) GetColumn(ctx context.Context, in *GetColumnRequest, opts ...grpc.CallOption) (*GetColumnResponse, error) {
	out := new(GetColumnResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/GetColumn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) ListColumns(ctx context.Context, in *ListColumnsRequest, opts ...grpc.CallOption) (*ListColumnsResponse, error) {
	out := new(ListColumnsResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/ListColumns", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) CreateColumn(ctx context.Context, in *CreateColumnRequest, opts ...grpc.CallOption) (*CreateColumnResponse, error) {
	out := new(CreateColumnResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/CreateColumn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) EditColumn(ctx context.Context, in *EditColumnRequest, opts ...grpc.CallOption) (*EditColumnResponse, error) {
	out := new(EditColumnResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/EditColumn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) DeleteColumn(ctx context.Context, in *DeleteColumnRequest, opts ...grpc.CallOption) (*DeleteColumnResponse, error) {
	out := new(DeleteColumnResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/DeleteColumn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) GetCard(ctx context.Context, in *GetCardRequest, opts ...grpc.CallOption) (*GetCardResponse, error) {
	out := new(GetCardResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/GetCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) ListCards(ctx context.Context, in *ListCardsRequest, opts ...grpc.CallOption) (*ListCardsResponse, error) {
	out := new(ListCardsResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/ListCards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) CreateCard(ctx context.Context, in *CreateCardRequest, opts ...grpc.CallOption) (*CreateCardResponse, error) {
	out := new(CreateCardResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/CreateCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) EditCard(ctx context.Context, in *EditCardRequest, opts ...grpc.CallOption) (*EditCardResponse, error) {
	out := new(EditCardResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/EditCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) DeleteCard(ctx context.Context, in *DeleteCardRequest, opts ...grpc.CallOption) (*DeleteCardResponse, error) {
	out := new(DeleteCardResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/DeleteCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) GetCardUser(ctx context.Context, in *GetCardUserRequest, opts ...grpc.CallOption) (*GetCardUserResponse, error) {
	out := new(GetCardUserResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/GetCardUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) ListCardUsers(ctx context.Context, in *ListCardUsersRequest, opts ...grpc.CallOption) (*ListCardUsersResponse, error) {
	out := new(ListCardUsersResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/ListCardUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) CreateCardUser(ctx context.Context, in *CreateCardUserRequest, opts ...grpc.CallOption) (*CreateCardUserResponse, error) {
	out := new(CreateCardUserResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/CreateCardUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) EditCardUser(ctx context.Context, in *EditCardUserRequest, opts ...grpc.CallOption) (*EditCardUserResponse, error) {
	out := new(EditCardUserResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/EditCardUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) DeleteCardUser(ctx context.Context, in *DeleteCardUserRequest, opts ...grpc.CallOption) (*DeleteCardUserResponse, error) {
	out := new(DeleteCardUserResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/DeleteCardUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) GetCardLabel(ctx context.Context, in *GetCardLabelRequest, opts ...grpc.CallOption) (*GetCardLabelResponse, error) {
	out := new(GetCardLabelResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/GetCardLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) ListCardLabels(ctx context.Context, in *ListCardLabelsRequest, opts ...grpc.CallOption) (*ListCardLabelsResponse, error) {
	out := new(ListCardLabelsResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/ListCardLabels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) CreateCardLabel(ctx context.Context, in *CreateCardLabelRequest, opts ...grpc.CallOption) (*CreateCardLabelResponse, error) {
	out := new(CreateCardLabelResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/CreateCardLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) EditCardLabel(ctx context.Context, in *EditCardLabelRequest, opts ...grpc.CallOption) (*EditCardLabelResponse, error) {
	out := new(EditCardLabelResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/EditCardLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) DeleteCardLabel(ctx context.Context, in *DeleteCardLabelRequest, opts ...grpc.CallOption) (*DeleteCardLabelResponse, error) {
	out := new(DeleteCardLabelResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/DeleteCardLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) GetCardComment(ctx context.Context, in *GetCardCommentRequest, opts ...grpc.CallOption) (*GetCardCommentResponse, error) {
	out := new(GetCardCommentResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/GetCardComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) ListCardComments(ctx context.Context, in *ListCardCommentsRequest, opts ...grpc.CallOption) (*ListCardCommentsResponse, error) {
	out := new(ListCardCommentsResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/ListCardComments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) CreateCardComment(ctx context.Context, in *CreateCardCommentRequest, opts ...grpc.CallOption) (*CreateCardCommentResponse, error) {
	out := new(CreateCardCommentResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/CreateCardComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) EditCardComment(ctx context.Context, in *EditCardCommentRequest, opts ...grpc.CallOption) (*EditCardCommentResponse, error) {
	out := new(EditCardCommentResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/EditCardComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) DeleteCardComment(ctx context.Context, in *DeleteCardCommentRequest, opts ...grpc.CallOption) (*DeleteCardCommentResponse, error) {
	out := new(DeleteCardCommentResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/DeleteCardComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) GetCardChecklistItem(ctx context.Context, in *GetCardChecklistItemRequest, opts ...grpc.CallOption) (*GetCardChecklistItemResponse, error) {
	out := new(GetCardChecklistItemResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/GetCardChecklistItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) ListCardChecklistItems(ctx context.Context, in *ListCardChecklistItemsRequest, opts ...grpc.CallOption) (*ListCardChecklistItemsResponse, error) {
	out := new(ListCardChecklistItemsResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/ListCardChecklistItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) CreateCardChecklistItem(ctx context.Context, in *CreateCardChecklistItemRequest, opts ...grpc.CallOption) (*CreateCardChecklistItemResponse, error) {
	out := new(CreateCardChecklistItemResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/CreateCardChecklistItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) EditCardChecklistItem(ctx context.Context, in *EditCardChecklistItemRequest, opts ...grpc.CallOption) (*EditCardChecklistItemResponse, error) {
	out := new(EditCardChecklistItemResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/EditCardChecklistItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) DeleteCardChecklistItem(ctx context.Context, in *DeleteCardChecklistItemRequest, opts ...grpc.CallOption) (*DeleteCardChecklistItemResponse, error) {
	out := new(DeleteCardChecklistItemResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/DeleteCardChecklistItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) GetCardAttachment(ctx context.Context, in *GetCardAttachmentRequest, opts ...grpc.CallOption) (*GetCardAttachmentResponse, error) {
	out := new(GetCardAttachmentResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/GetCardAttachment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) ListCardAttachments(ctx context.Context, in *ListCardAttachmentsRequest, opts ...grpc.CallOption) (*ListCardAttachmentsResponse, error) {
	out := new(ListCardAttachmentsResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/ListCardAttachments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) CreateCardAttachment(ctx context.Context, in *CreateCardAttachmentRequest, opts ...grpc.CallOption) (*CreateCardAttachmentResponse, error) {
	out := new(CreateCardAttachmentResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/CreateCardAttachment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) EditCardAttachment(ctx context.Context, in *EditCardAttachmentRequest, opts ...grpc.CallOption) (*EditCardAttachmentResponse, error) {
	out := new(EditCardAttachmentResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/EditCardAttachment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardsServiceClient) DeleteCardAttachment(ctx context.Context, in *DeleteCardAttachmentRequest, opts ...grpc.CallOption) (*DeleteCardAttachmentResponse, error) {
	out := new(DeleteCardAttachmentResponse)
	err := c.cc.Invoke(ctx, "/boards.BoardsService/DeleteCardAttachment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BoardsServiceServer is the server API for BoardsService service.
// All implementations must embed UnimplementedBoardsServiceServer
// for forward compatibility
type BoardsServiceServer interface {
	GetBoard(context.Context, *GetBoardRequest) (*GetBoardResponse, error)
	ListBoards(context.Context, *ListBoardsRequest) (*ListBoardsResponse, error)
	CreateBoard(context.Context, *CreateBoardRequest) (*CreateBoardResponse, error)
	EditBoard(context.Context, *EditBoardRequest) (*EditBoardResponse, error)
	DeleteBoard(context.Context, *DeleteBoardRequest) (*DeleteBoardResponse, error)
	GetColumn(context.Context, *GetColumnRequest) (*GetColumnResponse, error)
	ListColumns(context.Context, *ListColumnsRequest) (*ListColumnsResponse, error)
	CreateColumn(context.Context, *CreateColumnRequest) (*CreateColumnResponse, error)
	EditColumn(context.Context, *EditColumnRequest) (*EditColumnResponse, error)
	DeleteColumn(context.Context, *DeleteColumnRequest) (*DeleteColumnResponse, error)
	GetCard(context.Context, *GetCardRequest) (*GetCardResponse, error)
	ListCards(context.Context, *ListCardsRequest) (*ListCardsResponse, error)
	CreateCard(context.Context, *CreateCardRequest) (*CreateCardResponse, error)
	EditCard(context.Context, *EditCardRequest) (*EditCardResponse, error)
	DeleteCard(context.Context, *DeleteCardRequest) (*DeleteCardResponse, error)
	GetCardUser(context.Context, *GetCardUserRequest) (*GetCardUserResponse, error)
	ListCardUsers(context.Context, *ListCardUsersRequest) (*ListCardUsersResponse, error)
	CreateCardUser(context.Context, *CreateCardUserRequest) (*CreateCardUserResponse, error)
	EditCardUser(context.Context, *EditCardUserRequest) (*EditCardUserResponse, error)
	DeleteCardUser(context.Context, *DeleteCardUserRequest) (*DeleteCardUserResponse, error)
	GetCardLabel(context.Context, *GetCardLabelRequest) (*GetCardLabelResponse, error)
	ListCardLabels(context.Context, *ListCardLabelsRequest) (*ListCardLabelsResponse, error)
	CreateCardLabel(context.Context, *CreateCardLabelRequest) (*CreateCardLabelResponse, error)
	EditCardLabel(context.Context, *EditCardLabelRequest) (*EditCardLabelResponse, error)
	DeleteCardLabel(context.Context, *DeleteCardLabelRequest) (*DeleteCardLabelResponse, error)
	GetCardComment(context.Context, *GetCardCommentRequest) (*GetCardCommentResponse, error)
	ListCardComments(context.Context, *ListCardCommentsRequest) (*ListCardCommentsResponse, error)
	CreateCardComment(context.Context, *CreateCardCommentRequest) (*CreateCardCommentResponse, error)
	EditCardComment(context.Context, *EditCardCommentRequest) (*EditCardCommentResponse, error)
	DeleteCardComment(context.Context, *DeleteCardCommentRequest) (*DeleteCardCommentResponse, error)
	GetCardChecklistItem(context.Context, *GetCardChecklistItemRequest) (*GetCardChecklistItemResponse, error)
	ListCardChecklistItems(context.Context, *ListCardChecklistItemsRequest) (*ListCardChecklistItemsResponse, error)
	CreateCardChecklistItem(context.Context, *CreateCardChecklistItemRequest) (*CreateCardChecklistItemResponse, error)
	EditCardChecklistItem(context.Context, *EditCardChecklistItemRequest) (*EditCardChecklistItemResponse, error)
	DeleteCardChecklistItem(context.Context, *DeleteCardChecklistItemRequest) (*DeleteCardChecklistItemResponse, error)
	GetCardAttachment(context.Context, *GetCardAttachmentRequest) (*GetCardAttachmentResponse, error)
	ListCardAttachments(context.Context, *ListCardAttachmentsRequest) (*ListCardAttachmentsResponse, error)
	CreateCardAttachment(context.Context, *CreateCardAttachmentRequest) (*CreateCardAttachmentResponse, error)
	EditCardAttachment(context.Context, *EditCardAttachmentRequest) (*EditCardAttachmentResponse, error)
	DeleteCardAttachment(context.Context, *DeleteCardAttachmentRequest) (*DeleteCardAttachmentResponse, error)
	mustEmbedUnimplementedBoardsServiceServer()
}

// UnimplementedBoardsServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBoardsServiceServer struct {
}

func (UnimplementedBoardsServiceServer) GetBoard(context.Context, *GetBoardRequest) (*GetBoardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBoard not implemented")
}
func (UnimplementedBoardsServiceServer) ListBoards(context.Context, *ListBoardsRequest) (*ListBoardsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBoards not implemented")
}
func (UnimplementedBoardsServiceServer) CreateBoard(context.Context, *CreateBoardRequest) (*CreateBoardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBoard not implemented")
}
func (UnimplementedBoardsServiceServer) EditBoard(context.Context, *EditBoardRequest) (*EditBoardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditBoard not implemented")
}
func (UnimplementedBoardsServiceServer) DeleteBoard(context.Context, *DeleteBoardRequest) (*DeleteBoardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBoard not implemented")
}
func (UnimplementedBoardsServiceServer) GetColumn(context.Context, *GetColumnRequest) (*GetColumnResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetColumn not implemented")
}
func (UnimplementedBoardsServiceServer) ListColumns(context.Context, *ListColumnsRequest) (*ListColumnsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListColumns not implemented")
}
func (UnimplementedBoardsServiceServer) CreateColumn(context.Context, *CreateColumnRequest) (*CreateColumnResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateColumn not implemented")
}
func (UnimplementedBoardsServiceServer) EditColumn(context.Context, *EditColumnRequest) (*EditColumnResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditColumn not implemented")
}
func (UnimplementedBoardsServiceServer) DeleteColumn(context.Context, *DeleteColumnRequest) (*DeleteColumnResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteColumn not implemented")
}
func (UnimplementedBoardsServiceServer) GetCard(context.Context, *GetCardRequest) (*GetCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCard not implemented")
}
func (UnimplementedBoardsServiceServer) ListCards(context.Context, *ListCardsRequest) (*ListCardsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCards not implemented")
}
func (UnimplementedBoardsServiceServer) CreateCard(context.Context, *CreateCardRequest) (*CreateCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCard not implemented")
}
func (UnimplementedBoardsServiceServer) EditCard(context.Context, *EditCardRequest) (*EditCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditCard not implemented")
}
func (UnimplementedBoardsServiceServer) DeleteCard(context.Context, *DeleteCardRequest) (*DeleteCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCard not implemented")
}
func (UnimplementedBoardsServiceServer) GetCardUser(context.Context, *GetCardUserRequest) (*GetCardUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCardUser not implemented")
}
func (UnimplementedBoardsServiceServer) ListCardUsers(context.Context, *ListCardUsersRequest) (*ListCardUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCardUsers not implemented")
}
func (UnimplementedBoardsServiceServer) CreateCardUser(context.Context, *CreateCardUserRequest) (*CreateCardUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCardUser not implemented")
}
func (UnimplementedBoardsServiceServer) EditCardUser(context.Context, *EditCardUserRequest) (*EditCardUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditCardUser not implemented")
}
func (UnimplementedBoardsServiceServer) DeleteCardUser(context.Context, *DeleteCardUserRequest) (*DeleteCardUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCardUser not implemented")
}
func (UnimplementedBoardsServiceServer) GetCardLabel(context.Context, *GetCardLabelRequest) (*GetCardLabelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCardLabel not implemented")
}
func (UnimplementedBoardsServiceServer) ListCardLabels(context.Context, *ListCardLabelsRequest) (*ListCardLabelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCardLabels not implemented")
}
func (UnimplementedBoardsServiceServer) CreateCardLabel(context.Context, *CreateCardLabelRequest) (*CreateCardLabelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCardLabel not implemented")
}
func (UnimplementedBoardsServiceServer) EditCardLabel(context.Context, *EditCardLabelRequest) (*EditCardLabelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditCardLabel not implemented")
}
func (UnimplementedBoardsServiceServer) DeleteCardLabel(context.Context, *DeleteCardLabelRequest) (*DeleteCardLabelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCardLabel not implemented")
}
func (UnimplementedBoardsServiceServer) GetCardComment(context.Context, *GetCardCommentRequest) (*GetCardCommentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCardComment not implemented")
}
func (UnimplementedBoardsServiceServer) ListCardComments(context.Context, *ListCardCommentsRequest) (*ListCardCommentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCardComments not implemented")
}
func (UnimplementedBoardsServiceServer) CreateCardComment(context.Context, *CreateCardCommentRequest) (*CreateCardCommentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCardComment not implemented")
}
func (UnimplementedBoardsServiceServer) EditCardComment(context.Context, *EditCardCommentRequest) (*EditCardCommentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditCardComment not implemented")
}
func (UnimplementedBoardsServiceServer) DeleteCardComment(context.Context, *DeleteCardCommentRequest) (*DeleteCardCommentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCardComment not implemented")
}
func (UnimplementedBoardsServiceServer) GetCardChecklistItem(context.Context, *GetCardChecklistItemRequest) (*GetCardChecklistItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCardChecklistItem not implemented")
}
func (UnimplementedBoardsServiceServer) ListCardChecklistItems(context.Context, *ListCardChecklistItemsRequest) (*ListCardChecklistItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCardChecklistItems not implemented")
}
func (UnimplementedBoardsServiceServer) CreateCardChecklistItem(context.Context, *CreateCardChecklistItemRequest) (*CreateCardChecklistItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCardChecklistItem not implemented")
}
func (UnimplementedBoardsServiceServer) EditCardChecklistItem(context.Context, *EditCardChecklistItemRequest) (*EditCardChecklistItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditCardChecklistItem not implemented")
}
func (UnimplementedBoardsServiceServer) DeleteCardChecklistItem(context.Context, *DeleteCardChecklistItemRequest) (*DeleteCardChecklistItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCardChecklistItem not implemented")
}
func (UnimplementedBoardsServiceServer) GetCardAttachment(context.Context, *GetCardAttachmentRequest) (*GetCardAttachmentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCardAttachment not implemented")
}
func (UnimplementedBoardsServiceServer) ListCardAttachments(context.Context, *ListCardAttachmentsRequest) (*ListCardAttachmentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCardAttachments not implemented")
}
func (UnimplementedBoardsServiceServer) CreateCardAttachment(context.Context, *CreateCardAttachmentRequest) (*CreateCardAttachmentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCardAttachment not implemented")
}
func (UnimplementedBoardsServiceServer) EditCardAttachment(context.Context, *EditCardAttachmentRequest) (*EditCardAttachmentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditCardAttachment not implemented")
}
func (UnimplementedBoardsServiceServer) DeleteCardAttachment(context.Context, *DeleteCardAttachmentRequest) (*DeleteCardAttachmentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCardAttachment not implemented")
}
func (UnimplementedBoardsServiceServer) mustEmbedUnimplementedBoardsServiceServer() {}

// UnsafeBoardsServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BoardsServiceServer will
// result in compilation errors.
type UnsafeBoardsServiceServer interface {
	mustEmbedUnimplementedBoardsServiceServer()
}

func RegisterBoardsServiceServer(s grpc.ServiceRegistrar, srv BoardsServiceServer) {
	s.RegisterService(&BoardsService_ServiceDesc, srv)
}

func _BoardsService_GetBoard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBoardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).GetBoard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/GetBoard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).GetBoard(ctx, req.(*GetBoardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_ListBoards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBoardsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).ListBoards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/ListBoards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).ListBoards(ctx, req.(*ListBoardsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_CreateBoard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBoardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).CreateBoard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/CreateBoard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).CreateBoard(ctx, req.(*CreateBoardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_EditBoard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditBoardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).EditBoard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/EditBoard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).EditBoard(ctx, req.(*EditBoardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_DeleteBoard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBoardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).DeleteBoard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/DeleteBoard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).DeleteBoard(ctx, req.(*DeleteBoardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_GetColumn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetColumnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).GetColumn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/GetColumn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).GetColumn(ctx, req.(*GetColumnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_ListColumns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListColumnsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).ListColumns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/ListColumns",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).ListColumns(ctx, req.(*ListColumnsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_CreateColumn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateColumnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).CreateColumn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/CreateColumn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).CreateColumn(ctx, req.(*CreateColumnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_EditColumn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditColumnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).EditColumn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/EditColumn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).EditColumn(ctx, req.(*EditColumnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_DeleteColumn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteColumnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).DeleteColumn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/DeleteColumn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).DeleteColumn(ctx, req.(*DeleteColumnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_GetCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).GetCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/GetCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).GetCard(ctx, req.(*GetCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_ListCards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCardsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).ListCards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/ListCards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).ListCards(ctx, req.(*ListCardsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_CreateCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).CreateCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/CreateCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).CreateCard(ctx, req.(*CreateCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_EditCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).EditCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/EditCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).EditCard(ctx, req.(*EditCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_DeleteCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).DeleteCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/DeleteCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).DeleteCard(ctx, req.(*DeleteCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_GetCardUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCardUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).GetCardUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/GetCardUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).GetCardUser(ctx, req.(*GetCardUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_ListCardUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCardUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).ListCardUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/ListCardUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).ListCardUsers(ctx, req.(*ListCardUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_CreateCardUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCardUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).CreateCardUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/CreateCardUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).CreateCardUser(ctx, req.(*CreateCardUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_EditCardUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditCardUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).EditCardUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/EditCardUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).EditCardUser(ctx, req.(*EditCardUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_DeleteCardUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCardUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).DeleteCardUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/DeleteCardUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).DeleteCardUser(ctx, req.(*DeleteCardUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_GetCardLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCardLabelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).GetCardLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/GetCardLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).GetCardLabel(ctx, req.(*GetCardLabelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_ListCardLabels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCardLabelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).ListCardLabels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/ListCardLabels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).ListCardLabels(ctx, req.(*ListCardLabelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_CreateCardLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCardLabelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).CreateCardLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/CreateCardLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).CreateCardLabel(ctx, req.(*CreateCardLabelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_EditCardLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditCardLabelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).EditCardLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/EditCardLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).EditCardLabel(ctx, req.(*EditCardLabelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_DeleteCardLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCardLabelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).DeleteCardLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/DeleteCardLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).DeleteCardLabel(ctx, req.(*DeleteCardLabelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_GetCardComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCardCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).GetCardComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/GetCardComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).GetCardComment(ctx, req.(*GetCardCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_ListCardComments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCardCommentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).ListCardComments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/ListCardComments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).ListCardComments(ctx, req.(*ListCardCommentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_CreateCardComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCardCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).CreateCardComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/CreateCardComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).CreateCardComment(ctx, req.(*CreateCardCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_EditCardComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditCardCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).EditCardComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/EditCardComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).EditCardComment(ctx, req.(*EditCardCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_DeleteCardComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCardCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).DeleteCardComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/DeleteCardComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).DeleteCardComment(ctx, req.(*DeleteCardCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_GetCardChecklistItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCardChecklistItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).GetCardChecklistItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/GetCardChecklistItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).GetCardChecklistItem(ctx, req.(*GetCardChecklistItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_ListCardChecklistItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCardChecklistItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).ListCardChecklistItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/ListCardChecklistItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).ListCardChecklistItems(ctx, req.(*ListCardChecklistItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_CreateCardChecklistItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCardChecklistItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).CreateCardChecklistItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/CreateCardChecklistItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).CreateCardChecklistItem(ctx, req.(*CreateCardChecklistItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_EditCardChecklistItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditCardChecklistItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).EditCardChecklistItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/EditCardChecklistItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).EditCardChecklistItem(ctx, req.(*EditCardChecklistItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_DeleteCardChecklistItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCardChecklistItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).DeleteCardChecklistItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/DeleteCardChecklistItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).DeleteCardChecklistItem(ctx, req.(*DeleteCardChecklistItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_GetCardAttachment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCardAttachmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).GetCardAttachment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/GetCardAttachment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).GetCardAttachment(ctx, req.(*GetCardAttachmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_ListCardAttachments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCardAttachmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).ListCardAttachments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/ListCardAttachments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).ListCardAttachments(ctx, req.(*ListCardAttachmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_CreateCardAttachment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCardAttachmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).CreateCardAttachment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/CreateCardAttachment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).CreateCardAttachment(ctx, req.(*CreateCardAttachmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_EditCardAttachment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditCardAttachmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).EditCardAttachment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/EditCardAttachment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).EditCardAttachment(ctx, req.(*EditCardAttachmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BoardsService_DeleteCardAttachment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCardAttachmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardsServiceServer).DeleteCardAttachment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boards.BoardsService/DeleteCardAttachment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardsServiceServer).DeleteCardAttachment(ctx, req.(*DeleteCardAttachmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BoardsService_ServiceDesc is the grpc.ServiceDesc for BoardsService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BoardsService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "boards.BoardsService",
	HandlerType: (*BoardsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBoard",
			Handler:    _BoardsService_GetBoard_Handler,
		},
		{
			MethodName: "ListBoards",
			Handler:    _BoardsService_ListBoards_Handler,
		},
		{
			MethodName: "CreateBoard",
			Handler:    _BoardsService_CreateBoard_Handler,
		},
		{
			MethodName: "EditBoard",
			Handler:    _BoardsService_EditBoard_Handler,
		},
		{
			MethodName: "DeleteBoard",
			Handler:    _BoardsService_DeleteBoard_Handler,
		},
		{
			MethodName: "GetColumn",
			Handler:    _BoardsService_GetColumn_Handler,
		},
		{
			MethodName: "ListColumns",
			Handler:    _BoardsService_ListColumns_Handler,
		},
		{
			MethodName: "CreateColumn",
			Handler:    _BoardsService_CreateColumn_Handler,
		},
		{
			MethodName: "EditColumn",
			Handler:    _BoardsService_EditColumn_Handler,
		},
		{
			MethodName: "DeleteColumn",
			Handler:    _BoardsService_DeleteColumn_Handler,
		},
		{
			MethodName: "GetCard",
			Handler:    _BoardsService_GetCard_Handler,
		},
		{
			MethodName: "ListCards",
			Handler:    _BoardsService_ListCards_Handler,
		},
		{
			MethodName: "CreateCard",
			Handler:    _BoardsService_CreateCard_Handler,
		},
		{
			MethodName: "EditCard",
			Handler:    _BoardsService_EditCard_Handler,
		},
		{
			MethodName: "DeleteCard",
			Handler:    _BoardsService_DeleteCard_Handler,
		},
		{
			MethodName: "GetCardUser",
			Handler:    _BoardsService_GetCardUser_Handler,
		},
		{
			MethodName: "ListCardUsers",
			Handler:    _BoardsService_ListCardUsers_Handler,
		},
		{
			MethodName: "CreateCardUser",
			Handler:    _BoardsService_CreateCardUser_Handler,
		},
		{
			MethodName: "EditCardUser",
			Handler:    _BoardsService_EditCardUser_Handler,
		},
		{
			MethodName: "DeleteCardUser",
			Handler:    _BoardsService_DeleteCardUser_Handler,
		},
		{
			MethodName: "GetCardLabel",
			Handler:    _BoardsService_GetCardLabel_Handler,
		},
		{
			MethodName: "ListCardLabels",
			Handler:    _BoardsService_ListCardLabels_Handler,
		},
		{
			MethodName: "CreateCardLabel",
			Handler:    _BoardsService_CreateCardLabel_Handler,
		},
		{
			MethodName: "EditCardLabel",
			Handler:    _BoardsService_EditCardLabel_Handler,
		},
		{
			MethodName: "DeleteCardLabel",
			Handler:    _BoardsService_DeleteCardLabel_Handler,
		},
		{
			MethodName: "GetCardComment",
			Handler:    _BoardsService_GetCardComment_Handler,
		},
		{
			MethodName: "ListCardComments",
			Handler:    _BoardsService_ListCardComments_Handler,
		},
		{
			MethodName: "CreateCardComment",
			Handler:    _BoardsService_CreateCardComment_Handler,
		},
		{
			MethodName: "EditCardComment",
			Handler:    _BoardsService_EditCardComment_Handler,
		},
		{
			MethodName: "DeleteCardComment",
			Handler:    _BoardsService_DeleteCardComment_Handler,
		},
		{
			MethodName: "GetCardChecklistItem",
			Handler:    _BoardsService_GetCardChecklistItem_Handler,
		},
		{
			MethodName: "ListCardChecklistItems",
			Handler:    _BoardsService_ListCardChecklistItems_Handler,
		},
		{
			MethodName: "CreateCardChecklistItem",
			Handler:    _BoardsService_CreateCardChecklistItem_Handler,
		},
		{
			MethodName: "EditCardChecklistItem",
			Handler:    _BoardsService_EditCardChecklistItem_Handler,
		},
		{
			MethodName: "DeleteCardChecklistItem",
			Handler:    _BoardsService_DeleteCardChecklistItem_Handler,
		},
		{
			MethodName: "GetCardAttachment",
			Handler:    _BoardsService_GetCardAttachment_Handler,
		},
		{
			MethodName: "ListCardAttachments",
			Handler:    _BoardsService_ListCardAttachments_Handler,
		},
		{
			MethodName: "CreateCardAttachment",
			Handler:    _BoardsService_CreateCardAttachment_Handler,
		},
		{
			MethodName: "EditCardAttachment",
			Handler:    _BoardsService_EditCardAttachment_Handler,
		},
		{
			MethodName: "DeleteCardAttachment",
			Handler:    _BoardsService_DeleteCardAttachment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "boards.proto",
}
